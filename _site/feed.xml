<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-05-31T16:48:30+03:00</updated><id>http://localhost:4000/</id><title type="html">Eventya Documentation</title><subtitle>Eventya coding standards and best practices</subtitle><entry><title type="html">API Documentation</title><link href="http://localhost:4000/api/2018/05/31/eventya-api.html" rel="alternate" type="text/html" title="API Documentation" /><published>2018-05-31T16:10:07+03:00</published><updated>2018-05-31T16:10:07+03:00</updated><id>http://localhost:4000/api/2018/05/31/eventya-api</id><content type="html" xml:base="http://localhost:4000/api/2018/05/31/eventya-api.html">&lt;h2 id=&quot;the-basics&quot;&gt;The Basics&lt;/h2&gt;
&lt;p&gt;The API is built in a &lt;em&gt;RESTful&lt;/em&gt; way, it’s endpoints consists of:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;instance&lt;/strong&gt;: The name of the bucket of content. (can be obtain by contacting us)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;resource&lt;/strong&gt;: The type of content.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;access_token&lt;/strong&gt;: Secure encrypted token with which you can access the data. (can be obtain by contacting us)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;version&lt;/strong&gt;: Version of the API.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;structure&quot;&gt;Structure&lt;/h2&gt;
&lt;p&gt;The API is structured as a &lt;em&gt;json&amp;lt;&lt;/em&gt; web service and can be called through any library that supports the format.
&lt;strong&gt;Basic example:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET
https://api.eventya.eu/v1.0/instance/resource.json?access_token=access_token
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;resources&quot;&gt;Resources&lt;/h2&gt;
&lt;h4 id=&quot;profiles&quot;&gt;Profiles&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET
https://api.eventya.eu/v1.0/instance/profiles.json?access_token=access_token
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;output&quot;&gt;output:&lt;/h4&gt;
&lt;hr /&gt;

&lt;pre&gt;&lt;code class=&quot;language-JSON&quot;&gt;{
  &quot;id&quot;: &quot;uid&quot;,
  &quot;name&quot;: &quot;Name of profile&quot;,
  &quot;cover_url&quot;: &quot;url&quot;,
  &quot;logo_url&quot;: &quot;url&quot;,
  &quot;categories&quot;: [
    {
      &quot;category&quot;: &quot;Category&quot;
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;fields&quot;&gt;fields:&lt;/h4&gt;
&lt;hr /&gt;

&lt;p&gt;You can add an extra parameter &lt;code class=&quot;highlighter-rouge&quot;&gt;?fields=&lt;/code&gt; to append additional nodes in your output.
These will apply depending on your instance’s configuration:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;has_location_tags&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;A set of city / country tags.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-JSON&quot;&gt;  &quot;location_tags&quot;: [
    {
      &quot;name&quot;: &quot;Kinshasa&quot;,
      &quot;country&quot;: &quot;Democratic Republic of the Congo&quot;
    }
  ]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;contact_details&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Details like email, phone number, website url.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-JSON&quot;&gt;  &quot;contact_details&quot;: {
    &quot;phone&quot;: &quot;321321321&quot;,
    &quot;contact_email&quot;: &quot;aluca@i-consult.ro&quot;
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;features&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Extra features depending on the configuration of each category of profiles.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-JSON&quot;&gt;  &quot;features&quot;: [
    {
      &quot;name&quot;: &quot;Name of feature&quot;,
      &quot;value&quot;: &quot;Value&quot;
    },
  ]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;location&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;GPS coordontates and address of the profile.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-JSON&quot;&gt;  &quot;location&quot;: {
    &quot;lat&quot;: &quot;latitude&quot;,
    &quot;lng&quot;: &quot;longitude&quot;,
    &quot;address&quot;: &quot;Address&quot;
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;business_hours&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Opening and closing hours of the profile.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-JSON&quot;&gt;  &quot;business_hours&quot;: [
    {
      &quot;label&quot;: &quot;Luni&quot;,
      &quot;values&quot;: [
        [
          &quot;11:00&quot;,
          &quot;20:00&quot;
        ]
      ]
    }
  ]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tables&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Extra data associated with a profile.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-JSON&quot;&gt;  &quot;tables&quot;: [
    {
      &quot;name&quot;: &quot;Name of table&quot;,
      &quot;image_url&quot;: &quot;url&quot;,
      &quot;models&quot;: [
        {
          &quot;count&quot;: 3,
          &quot;name&quot;: &quot;Name of model&quot;
        }
      ]
    }
  ]
&lt;/code&gt;&lt;/pre&gt;</content><author><name></name></author><summary type="html">The Basics The API is built in a RESTful way, it’s endpoints consists of: instance: The name of the bucket of content. (can be obtain by contacting us) resource: The type of content. access_token: Secure encrypted token with which you can access the data. (can be obtain by contacting us) version: Version of the API.</summary></entry></feed>